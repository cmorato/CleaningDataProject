q()
a<-available.packages()
head(rownames(a), 10) ##show the names of the first few packages
install.packages("slidify")
install.packages("slidify")
source("htpp://bioconductor.org/biocLite.R")
source("htpp://bioconductor.org/biocLite.R")
biocLite()
library(ggplot2)
find.package("devtools")
find.package("devtools")
find.package("devtools")
getwd()
setwd("/R")
setwd("/R/")
setwd("R/")
setwd("Cleaning Data/Project")
getwd()
trainData <- read.table("./UCI_HAR_Dataset/train/X_train.txt")
dim(trainData) # 7352*561
head(trainData)
trainLabel <- read.table("./UCI_HAR_Dataset/train/y_train.txt")
table(trainLabel)
trainSubject <- read.table("./UCI_HAR_Dataset/train/subject_train.txt")
testData <- read.table("./UCI_HAR_Dataset/test/X_test.txt")
dim(testData) # 2947*561
testLabel <- read.table("./UCI_HAR_Dataset/test/y_test.txt")
table(testLabel)
testSubject <- read.table("./UCI_HAR_Dataset/test/subject_test.txt")
TotalData <- rbind(trainData, testData)
dim(TotalData) # 10299*561
TotalLabel <- rbind(trainLabel, testLabel)
dim(TotalLabel) # 10299*1
TotalSubject <- rbind(trainSubject, testSubject)
dim(TotalSubject) # 10299*1
features <- read.table("./UCI_HAR_Dataset/features.txt")
dim(features)  # Dim 561*2
meanStdInd <- grep("mean\\(\\)|std\\(\\)", features[, 2])
length(meanStdInd) # 66
TotalData <- TotalData[, meanStdIndices]
dim(TotalData) # Dim 10299*66
names(TotalData) <- gsub("\\(\\)", "", features[meanStdInd, 2]) # remove "()"
names(TotalData) <- gsub("mean", "Mean", names(TotalData)) # capitalize M
names(TotalData) <- gsub("std", "Std", names(TotalData)) # capitalize S
names(TotalData) <- gsub("-", "", names(TotalData)) # remove "-" in column names
TotalData <- TotalData[, meanStdInd]
dim(TotalData) # Dim 10299*66
names(TotalData) <- gsub("\\(\\)", "", features[meanStdInd, 2]) # remove "()"
names(TotalData) <- gsub("mean", "Mean", names(TotalData)) # capitalize M
names(TotalData) <- gsub("std", "Std", names(TotalData)) # capitalize S
names(TotalData) <- gsub("-", "", names(TotalData)) # remove "-" in column names
TotalData
measurements <- read.table("./UCI_HAR_Dataset/features.txt")
dim(measurements)  # Dim 561*2
meanStdInd <- grep("mean\\(\\)|std\\(\\)", measurements[, 2])
# leng of the subset = 66
length(meanStdInd)
TotalData <- TotalData[, meanStdInd]
dim(TotalData) # Dim 10299*66
names(TotalData) <- gsub("\\(\\)", "", measurements[meanStdInd, 2])
#standarize with a capitalize M
names(TotalData) <- gsub("mean", "Mean", names(TotalData))
#standarize with a capitalize S
names(TotalData) <- gsub("std", "Std", names(TotalData))
# removing "-" in column names
names(TotalData) <- gsub("-", "", names(TotalData))
# Step 1.
# Merges the training and the test sets to create one data set.
# setwd("~/Documents/R/Cleaning Data/project/")
trainData <- read.table("./UCI_HAR_Dataset/train/X_train.txt")
dim(trainData) # Dim = 7352*561
head(trainData)
trainLabel <- read.table("./UCI_HAR_Dataset/train/y_train.txt")
table(trainLabel)
trainSubject <- read.table("./UCI_HAR_Dataset/train/subject_train.txt")
testData <- read.table("./UCI_HAR_Dataset/test/X_test.txt")
dim(testData) # Dim 2947*561
testLabel <- read.table("./UCI_HAR_Dataset/test/y_test.txt")
table(testLabel)
testSubject <- read.table("./UCI_HAR_Dataset/test/subject_test.txt")
TotalData <- rbind(trainData, testData)
dim(TotalData) # Dim 10299*561
TotalLabel <- rbind(trainLabel, testLabel)
dim(TotalLabel) # Dim 10299*1
TotalSubject <- rbind(trainSubject, testSubject)
dim(TotalSubject) # Dim 10299*1
measurements <- read.table("./UCI_HAR_Dataset/features.txt")
dim(measurements)
meanStdInd <- grep("mean\\(\\)|std\\(\\)", measurements[, 2])
length(meanStdInd)
TotalData <- TotalData[, meanStdInd]
dim(TotalData) # Dim 10299*66
names(TotalData) <- gsub("\\(\\)", "", measurements[meanStdInd, 2])
#standarize with a capitalize M
names(TotalData) <- gsub("mean", "Mean", names(TotalData))
#standarize with a capitalize S
names(TotalData) <- gsub("std", "Std", names(TotalData))
# removing "-" in column names
names(TotalData) <- gsub("-", "", names(TotalData))
activity <- read.table("./UCI_HAR_Dataset/activity_labels.txt")
activity[, 2] <- tolower(gsub("_", "", activity[, 2]))
substr(activity[2, 2], 8, 8) <- toupper(substr(activity[2, 2], 8, 8))
substr(activity[3, 2], 8, 8) <- toupper(substr(activity[3, 2], 8, 8))
activityLabel <- activity[TotalLabel[, 1], 2]
TotalLabel[, 1] <- activityLabel
names(TotalLabel) <- "activity"
names(TotalSubject) <- "subject"
cleanedData <- cbind(TotalSubject, TotalLabel, TotalData)
dim(cleanedData) # 10299*68
# writing the 1st dataset in HD
write.table(cleanedData, "merged_data.txt")
subjectLen <- length(table(TotalSubject)) # 30
activityLen <- dim(activity)[1] # 6
colLen <- dim(cleanedData)[2]
result <- matrix(NA, nrow=subjectLen*activityLen, ncol=colLen)
result <- as.data.frame(result)
colnames(result) <- colnames(cleanedData)
row <- 1
for(i in 1:subjectLen) {
for(j in 1:activityLen) {
result[row, 1] <- sort(unique(joinSubject)[, 1])[i]
result[row, 2] <- activity[j, 2]
bool1 <- i == cleanedData$subject
bool2 <- activity[j, 2] == cleanedData$activity
result[row, 3:columnLen] <- colMeans(cleanedData[bool1&bool2, 3:columnLen])
row <- row + 1
}
}
head(result)
write.table(result, "data_with_means.txt") # write out the 2nd dataset
for(i in 1:subjectLen) {
for(j in 1:activityLen) {
result[row, 1] <- sort(unique(TotalSubject)[, 1])[i]
result[row, 2] <- activity[j, 2]
bool1 <- i == cleanedData$subject
bool2 <- activity[j, 2] == cleanedData$activity
result[row, 3:columnLen] <- colMeans(cleanedData[bool1&bool2, 3:columnLen])
row <- row + 1
}
}
head(result)
write.table(result, "data_with_means.txt") # write out the 2nd dataset
# 1. Merges the training and the test sets to create one data set.
tmp1 <- read.table("./UCI_HAR_Dataset/train/X_train.txt")
tmp2 <- read.table("./UCI_HAR_Dataset/test/X_test.txt")
X <- rbind(tmp1, tmp2)
tmp1 <- read.table("./UCI_HAR_Dataset/train/subject_train.txt")
tmp2 <- read.table("./UCI_HAR_Dataset/test/subject_test.txt")
S <- rbind(tmp1, tmp2)
tmp1 <- read.table("./UCI_HAR_Dataset/train/y_train.txt")
tmp2 <- read.table("./UCI_HAR_Dataset/test/y_test.txt")
Y <- rbind(tmp1, tmp2)
# 2. Extracts only the measurements on the mean and standard deviation for each measurement.
features <- read.table("./UCI_HAR_Dataset/features.txt")
indices_of_good_features <- grep("-mean\\(\\)|-std\\(\\)", features[, 2])
X <- X[, indices_of_good_features]
names(X) <- features[indices_of_good_features, 2]
names(X) <- gsub("\\(|\\)", "", names(X))
names(X) <- tolower(names(X))
# 3. Uses descriptive activity names to name the activities in the data set.
activities <- read.table("./UCI_HAR_Dataset/activity_labels.txt")
activities[, 2] = gsub("_", "", tolower(as.character(activities[, 2])))
Y[,1] = activities[Y[,1], 2]
names(Y) <- "activity"
# 4. Appropriately labels the data set with descriptive activity names.
names(S) <- "subject"
cleaned <- cbind(S, Y, X)
write.table(cleaned, "merged_clean_data.txt")
# 5. Creates a 2nd, independent tidy data set with the average of each variable for each activity and each subject.
uniqueSubjects = unique(S)[,1]
numSubjects = length(unique(S)[,1])
numActivities = length(activities[,1])
numCols = dim(cleaned)[2]
result = cleaned[1:(numSubjects*numActivities), ]
row = 1
for (s in 1:numSubjects) {
for (a in 1:numActivities) {
result[row, 1] = uniqueSubjects[s]
result[row, 2] = activities[a, 2]
tmp <- cleaned[cleaned$subject==s & cleaned$activity==activities[a, 2], ]
result[row, 3:numCols] <- colMeans(tmp[, 3:numCols])
row = row+1
}
}
write.table(result, "data_set_with_the_averages.txt")
# Step 1.
# Merges the training and the test sets to create one data set.
# setwd("~/Documents/R/Cleaning Data/project/")
trainData <- read.table("./UCI_HAR_Dataset/train/X_train.txt")
dim(trainData) # Dim = 7352*561
head(trainData)
trainLabel <- read.table("./UCI_HAR_Dataset/train/y_train.txt")
table(trainLabel)
trainSubject <- read.table("./UCI_HAR_Dataset/train/subject_train.txt")
testData <- read.table("./UCI_HAR_Dataset/test/X_test.txt")
dim(testData) # Dim 2947*561
testLabel <- read.table("./UCI_HAR_Dataset/test/y_test.txt")
table(testLabel)
testSubject <- read.table("./UCI_HAR_Dataset/test/subject_test.txt")
TotalData <- rbind(trainData, testData)
dim(TotalData) # Dim 10299*561
TotalLabel <- rbind(trainLabel, testLabel)
dim(TotalLabel) # Dim 10299*1
TotalSubject <- rbind(trainSubject, testSubject)
dim(TotalSubject) # Dim 10299*1
# Step2.
# Extracts only the measurements on the mean and standard
# deviation for each measurement.
measurements <- read.table("./UCI_HAR_Dataset/features.txt")
dim(measurements)  # Dim 561*2
meanStdInd <- grep("mean\\(\\)|std\\(\\)", measurements[, 2])
# leng of the subset = 66
length(meanStdInd)
TotalData <- TotalData[, meanStdInd]
dim(TotalData) # Dim 10299*66
names(TotalData) <- gsub("\\(\\)", "", measurements[meanStdInd, 2])
#standarize with a capitalize M
names(TotalData) <- gsub("mean", "Mean", names(TotalData))
#standarize with a capitalize S
names(TotalData) <- gsub("std", "Std", names(TotalData))
# removing "-" in column names
names(TotalData) <- gsub("-", "", names(TotalData))
# Step3.
# Uses descriptive activity names to name the activities
# in the data set
activity <- read.table("./UCI_HAR_Dataset/activity_labels.txt")
activity[, 2] <- tolower(gsub("_", "", activity[, 2]))
substr(activity[2, 2], 8, 8) <- toupper(substr(activity[2, 2], 8, 8))
substr(activity[3, 2], 8, 8) <- toupper(substr(activity[3, 2], 8, 8))
activityLabel <- activity[TotalLabel[, 1], 2]
TotalLabel[, 1] <- activityLabel
names(TotalLabel) <- "activity"
# Step4.
# Appropriately labels the data set with descriptive
# activity names.
names(TotalSubject) <- "subject"
cleanedData <- cbind(TotalSubject, TotalLabel, TotalData)
dim(cleanedData) # 10299*68
# writing the 1st dataset in HD
write.table(cleanedData, "merged_data.txt")
# Step5.
# Creates a second, independent tidy data set with the
# average of each variable for each activity and each subject.
subjectLen <- length(table(TotalSubject)) # 30
activityLen <- dim(activity)[1] # 6
colLen <- dim(cleanedData)[2]
result <- matrix(NA, nrow=subjectLen*activityLen, ncol=colLen)
result <- as.data.frame(result)
colnames(result) <- colnames(cleanedData)
row <- 1
for(i in 1:subjectLen) {
for(j in 1:activityLen) {
result[row, 1] <- sort(unique(TotalSubject)[, 1])[i]
result[row, 2] <- activity[j, 2]
bool1 <- i == cleanedData$subject
bool2 <- activity[j, 2] == cleanedData$activity
result[row, 3:columnLen] <- colMeans(cleanedData[bool1&bool2, 3:columnLen])
row <- row + 1
}
}
head(result)
write.table(result, "data_with_means.txt") # write out the 2nd dataset
# data <- read.table("./data_with_means.txt")
# data[1:12, 1:3]
head(trainData)
trainData <- read.table("./UCI_HAR_Dataset/train/X_train.txt")
testData <- read.table("./UCI_HAR_Dataset/test/X_test.txt")
dim(trainData) # Dim = 7352*561
dim(testData) # Dim 2947*561
X_Total <- rbind(trainData, testData)
dim(X_Total) # Dim 10299*561
trainSubject <- read.table("./UCI_HAR_Dataset/train/subject_train.txt")
testSubject <- read.table("./UCI_HAR_Dataset/test/subject_test.txt")
S_Total <- rbind(trainSubject, testSubject)
dim(S_Total) # Dim 10299*1
trainLabel <- read.table("./UCI_HAR_Dataset/train/y_train.txt")
testLabel <- read.table("./UCI_HAR_Dataset/test/y_test.txt")
Y_Total <- rbind(trainLabel, testLabel)
dim(Y_Total) # Dim 10299*1
features <- read.table("./UCI_HAR_Dataset/features.txt")
dim(festures)  # Dim 561*2
meanStdIndices <- grep("-mean\\(\\)|-std\\(\\)", features[, 2])
# leng of the subset = 66
length(meanStdInd)
X_Total <- X_Total[, meanStdIndices]
names(X) <- features[meanStdIndices, 2]
names(X) <- gsub("\\(|\\)", "", names(X))
names(X) <- tolower(names(X))
dim(features)
activities <- read.table("./UCI_HAR_Dataset/activity_labels.txt")
activities[, 2] = gsub("_", "", tolower(as.character(activities[, 2])))
Y_Total[,1] = activities[Y_Total[,1], 2]
names(Y_Total) <- "activity"
names(S_Total) <- "subject"
cleanedData <- cbind(S_Total, Y_Total, X_Total)
dim(cleanedData) # 10299*68
# writing the 1st dataset in HD
write.table(cleanedData, "merged_data.txt")
uniqueSubjects = unique(S_Total)[,1]
numSubjects = length(unique(S_Total)[,1])
numActivities = length(activities[,1])
numCols = dim(cleanedData)[2]
result = cleaned[1:(numSubjects*numActivities), ]
result = cleanedData[1:(numSubjects*numActivities), ]
row = 1
for (s in 1:numSubjects) {
for (a in 1:numActivities) {
result[row, 1] = uniqueSubjects[s]
result[row, 2] = activities[a, 2]
tmp <- cleanedData[cleanedData$subject==s & cleanedData$activity==activities[a, 2], ]
result[row, 3:numCols] <- colMeans(tmp[, 3:numCols])
row = row+1
}
}
write.table(result, "data_with_means.txt")
activities
# Step 1.
# Merges the training and the test sets to create one data set.
# setwd("~/Documents/R/Cleaning Data/project/")
trainData <- read.table("./UCI_HAR_Dataset/train/X_train.txt")
testData <- read.table("./UCI_HAR_Dataset/test/X_test.txt")
dim(trainData) # Dim = 7352*561
dim(testData) # Dim 2947*561
X_Total <- rbind(trainData, testData)
dim(X_Total) # Dim 10299*561
trainSubject <- read.table("./UCI_HAR_Dataset/train/subject_train.txt")
testSubject <- read.table("./UCI_HAR_Dataset/test/subject_test.txt")
S_Total <- rbind(trainSubject, testSubject)
dim(S_Total) # Dim 10299*1
trainLabel <- read.table("./UCI_HAR_Dataset/train/y_train.txt")
testLabel <- read.table("./UCI_HAR_Dataset/test/y_test.txt")
Y_Total <- rbind(trainLabel, testLabel)
dim(Y_Total) # Dim 10299*1
# Step2.
# Extracts only the measurements on the mean and standard
# deviation for each measurement.
features <- read.table("./UCI_HAR_Dataset/features.txt")
dim(features)  # Dim 561*2
meanStdIndices <- grep("-mean\\(\\)|-std\\(\\)", features[, 2])
# leng of the subset = 66
length(meanStdInd)
X_Total <- X_Total[, meanStdIndices]
names(X_Total) <- features[meanStdIndices, 2]
names(X_Total) <- gsub("\\(|\\)", "", names(X_Total))
names(X_Total) <- tolower(names(X_Total))
# Step3.
# Uses descriptive activity names to name the activities
# in the data set
activities <- read.table("./UCI_HAR_Dataset/activity_labels.txt")
activities[, 2] = gsub("_", "", tolower(as.character(activities[, 2])))
Y_Total[,1] = activities[Y_Total[,1], 2]
names(Y_Total) <- "activity"
# Step4.
# Appropriately labels the data set with descriptive
# activity names.
names(S_Total) <- "subject"
cleanedData <- cbind(S_Total, Y_Total, X_Total)
dim(cleanedData) # 10299*68
# writing the 1st dataset in HD
write.table(cleanedData, "merged_data.txt")
# Step5.
# Creates a second, independent tidy data set with the
# average of each variable for each activity and each subject.
uniqueSubjects = unique(S_Total)[,1]
numSubjects = length(unique(S_Total)[,1])
numActivities = length(activities[,1])
numCols = dim(cleanedData)[2]
result = cleanedData[1:(numSubjects*numActivities), ]
row = 1
for (s in 1:numSubjects) {
for (a in 1:numActivities) {
result[row, 1] = uniqueSubjects[s]
result[row, 2] = activities[a, 2]
tmp <- cleanedData[cleanedData$subject==s & cleanedData$activity==activities[a, 2], ]
result[row, 3:numCols] <- colMeans(tmp[, 3:numCols])
row = row+1
}
}
write.table(result, "data_with_means.txt")
# Getting and Cleaning Data
# Project
# Step 1.
# Merges the training and the test sets to create one data set.
# setwd("~/Documents/R/Cleaning Data/project/")
trainData <- read.table("./UCI_HAR_Dataset/train/X_train.txt")
testData <- read.table("./UCI_HAR_Dataset/test/X_test.txt")
dim(trainData) # Dim = 7352*561
dim(testData) # Dim 2947*561
X_Total <- rbind(trainData, testData)
dim(X_Total) # Dim 10299*561
trainSubject <- read.table("./UCI_HAR_Dataset/train/subject_train.txt")
testSubject <- read.table("./UCI_HAR_Dataset/test/subject_test.txt")
S_Total <- rbind(trainSubject, testSubject)
dim(S_Total) # Dim 10299*1
trainLabel <- read.table("./UCI_HAR_Dataset/train/y_train.txt")
testLabel <- read.table("./UCI_HAR_Dataset/test/y_test.txt")
Y_Total <- rbind(trainLabel, testLabel)
dim(Y_Total) # Dim 10299*1
# Step2.
# Extracts only the measurements on the mean and standard
# deviation for each measurement.
features <- read.table("./UCI_HAR_Dataset/features.txt")
dim(features)  # Dim 561*2
meanStdIndices <- grep("-mean\\(\\)|-std\\(\\)", features[, 2])
# leng of the subset = 66
length(meanStdInd)
X_Total <- X_Total[, meanStdIndices]
names(X_Total) <- features[meanStdIndices, 2]
names(X_Total) <- gsub("\\(|\\)", "", names(X_Total))
names(X_Total) <- tolower(names(X_Total))
# Step3.
# Uses descriptive activity names to name the activities
# in the data set
activities <- read.table("./UCI_HAR_Dataset/activity_labels.txt")
activities[, 2] = gsub("_", "", tolower(as.character(activities[, 2])))
Y_Total[,1] = activities[Y_Total[,1], 2]
names(Y_Total) <- "activity"
# Step4.
# Appropriately labels the data set with descriptive
# activity names.
names(S_Total) <- "subject"
cleanedData <- cbind(S_Total, Y_Total, X_Total)
dim(cleanedData) # 10299*68
# writing the 1st dataset in HD
write.table(cleanedData, "merged_data.txt")
# Step5.
# Creates a second, independent tidy data set with the
# average of each variable for each activity and each subject.
uniqueSubjects = unique(S_Total)[,1]
numSubjects = length(unique(S_Total)[,1])
numActivities = length(activities[,1])
numCols = dim(cleanedData)[2]
result = cleanedData[1:(numSubjects*numActivities), ]
row = 1
for (s in 1:numSubjects) {
for (a in 1:numActivities) {
result[row, 1] = uniqueSubjects[s]
result[row, 2] = activities[a, 2]
tmp <- cleanedData[cleanedData$subject==s & cleanedData$activity==activities[a, 2], ]
result[row, 3:numCols] <- colMeans(tmp[, 3:numCols])
row = row+1
}
}
# writing the 2nd dataset in HD
write.table(result, "data_with_means.txt")
# data <- read.table("./data_with_means.txt")
